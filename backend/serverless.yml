org: ucmseniorproject1
app: senior-project-backend
service: backend
frameworkVersion: '3'
	
plugins:
  - serverless-s3-sync

provider:
  httpApi:
    cors: true
  name: aws
  runtime: nodejs16.x
  environment: 
    DYNAMODB_USER_TABLE: ${self:service}-userTable-${sls:stage}
    DYNAMODB_FORUM_TABLE: ${self:service}-reimbursementFormTable-${sls:stage}
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  profile: user1
  iam: # Role is applied globally to all functions below allowing access to dynamodb table JobsTable
    role:
      statements:
        - Effect: Allow
          Action:
            - "dynamodb:PutItem"
            - "dynamodb:GetItem"
            - "dynamodb:Scan"
            - "dynamodb:UpdateItem"
            - "dynamodb:DeleteItem"
          Resource:
            - Fn::GetAtt: [ UserTable, Arn ]
            - Fn::GetAtt: [ ReimbursementFormTable, Arn ]

custom:
  s3Sync:
    - bucketName: angular-site-risen1ucm1
      localDir: ../frontend/dist/frontend/browser
      deleteRemoved: true # optional, indicates whether sync deletes files no longer present in localDir. Defaults to 'true'
      followSymlinks: true # optional
      defaultContentType: text/html
functions:
  createUser:
    handler: createUser.createUser
    events:
      - httpApi:
          path: /createUser
          method: POST
  getAllUsers:
    handler: getAllUsers.getAllUsers
    events:
      - httpApi:
          path: /getUsers
          method: GET
  getUser:
    handler: getUser.getUser
    events:
      - httpApi:
          path: /getUser/{key}
          method: GET
  createForum:
    handler: createForum.createForum
    events:
      - httpApi:
          path: /createForum
          method: POST
  getAllForums:
    handler: getAllForums.getAllForums
    events:
      - httpApi:
          path: /getForums
          method: GET
resources:
  Resources:
    UserTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: primary_key
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: primary_key
            KeyType: HASH
        TableName: ${self:service}-userTable-${sls:stage}
    ReimbursementFormTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: primary_key
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: primary_key
            KeyType: HASH
        TableName: ${self:service}-reimbursementFormTable-${sls:stage}
    SiteBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: angular-site-risen1ucm1
        WebsiteConfiguration:
          IndexDocument: index.html





  

